name: Build Godot Project

on:
  pull_request:
    branches:
      - main

# Configure the release workflow by editing the following values.
env:
  # The itch.io project to upload to in the format `user-name/project-name`.
  # There will be no upload to itch.io if this is commented out.
  itch_page: wake1st/colored-claws

  # NOTE: If your `project.godot` is at the repository root, set `PROJECT_PATH` below to ".".
  GODOT_VERSION: 4.3
  EXPORT_NAME: project
  PROJECT_PATH: .

jobs:
  forward-env:
    runs-on: ubuntu-latest
    steps:
      - name: Do nothing
        run: "true"
    outputs:
      itch_page: ${{ env.itch_page }}

  # Determine the version number for this workflow.
  get-version:
    runs-on: ubuntu-latest
    steps:
      - name: Determine version number
        id: tag
        run: echo "ref=${GITHUB_REF#refs/*/}" >> "${GITHUB_OUTPUT}"
    outputs:
      # Use the input from workflow dispatch, or fall back to the git ref.
      version: ${{ inputs.version || steps.ref.outputs.ref }}
  
  export-web:
    name: Web Export
    runs-on: ubuntu-24.04  # Use 24.04 with godot 4
    container:
      image: barichello/godot-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Web Build
        run: |
          mkdir -v -p build/web
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Web" "$EXPORT_DIR/web/index.html"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-itch
          path: ${{ github.workspace }}/${{ steps.build.outputs.build }}
      # - name: Upload Artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: web-pages
      #     path: build/web
      # - name: Install rsync ðŸ“š
      #   run: |
      #     apt-get update && apt-get install -y rsync
      # - name: Deploy to GitHub Pages ðŸš€
      #   uses: JamesIves/github-pages-deploy-action@releases/v4
      #   with:
      #     branch: gh-pages # The branch the action should deploy to.
      #     folder: build/web # The folder the action should deploy.
  # build:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       platform: [HTML5]
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         lfs: true
  #     - name: Build
  #       id: build
  #       uses: manleydev/build-godot-action@v1.4.1
  #       with:
  #         name: example
  #         preset: ${{ matrix.platform }}
  #         debugMode: "false"
  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: client-${{ matrix.platform }}
  #         path: ${{ github.workspace }}/${{ steps.build.outputs.build }}
  
  upload-to-itch:
    runs-on: ubuntu-latest
    needs:
      - forward-env
      - get-version
      - build
    if: ${{ inputs.upload_to_itch && needs.forward-env.outputs.itch_page != '' }}

    steps:
      - name: Download all packages
        uses: actions/download-artifact@v4
        with:
          pattern: web-itch
          path: ${{ github.workspace }}/${{ steps.build.outputs.build }}

      - name: Install butler
        run: |
          curl -L -o butler.zip 'https://broth.itch.zone/butler/linux-amd64/LATEST/archive/default'
          unzip butler.zip
          chmod +x butler
          ./butler -V

      - name: Upload all packages to itch.io
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_CREDENTIALS }}
        run: |
          for channel in $(ls tmp); do
            ./butler push \
              --fix-permissions \
              --userversion='${{ needs.get-version.outputs.version }}' \
              tmp/"${channel}"/* \
              '${{ env.itch_page }}':"${channel#package-}"
          done
